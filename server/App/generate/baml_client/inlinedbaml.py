###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

file_map = {

    "clients.baml": "// Learn more about clients at https://docs.boundaryml.com/docs/snippets/clients/overview\n\nclient<llm> CustomGPT4o {\n  provider openai\n  options {\n    model \"gpt-4o\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\nclient<llm> GPT4Mini {\n  provider openai\n  retry_policy Exponential\n  options {\n    model \"gpt-4o-mini\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\nclient<llm> CustomSonnet {\n  provider anthropic\n  options {\n    model \"claude-3-5-sonnet-20241022\"\n    api_key env.ANTHROPIC_API_KEY\n  }\n}\n\n\nclient<llm> CustomHaiku {\n  provider anthropic\n  retry_policy Constant\n  options {\n    model \"claude-3-haiku-20240307\"\n    api_key env.ANTHROPIC_API_KEY\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/round-robin\nclient<llm> CustomFast {\n  provider round-robin\n  options {\n    // This will alternate between the two clients\n    strategy [CustomGPT4oMini, CustomHaiku]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/fallback\nclient<llm> OpenaiFallback {\n  provider fallback\n  options {\n    // This will try the clients in order until one succeeds\n    strategy [CustomGPT4oMini, CustomGPT4oMini]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/retry\nretry_policy Constant {\n  max_retries 3\n  // Strategy is optional\n  strategy {\n    type constant_delay\n    delay_ms 200\n  }\n}\n\nretry_policy Exponential {\n  max_retries 2\n  // Strategy is optional\n  strategy {\n    type exponential_backoff\n    delay_ms 300\n    mutliplier 1.5\n    max_delay_ms 10000\n  }\n}\n",
    "generate_test_cases.baml": "\nclass GenTestCasesParams {\n  description string\n  test_cases map<string, string>[]\n  input_variables string[]\n}\n\nclass GenTestCases {\n  test_cases map<string, string>[]\n}\n\n\nfunction GenerateTestCases(params: GenTestCasesParams) -> GenTestCases {\n    client GPT4Mini\n    prompt #\"\n        To test out a function I wrote I require additional testing data.\n        Here is a short description of the function:\n\n        {{params.description}}\n\n        Generate one to two data points for my function that each contain a value for the following fields:\n        {% for var in params.input_variables %}\n        {{ var }},\n        {% endfor %}\n\n        Here are some examples:\n        {% for test_case in params.test_cases %}\n        {{ test_case}},\n        {% endfor %}\n\n        If the provided is not sufficient to generate data points, simply output \"insufficient context\". \n        Note that the data points must not necessarily be exactly like the examples. They may differ. But they must all contain the specified fields.\n    \"#\n}\n\ntest Test1 {\n  functions [GenerateTestCases]\n  args {\n    params {\n      description \"Summarizes a text to a given number of sentences\"\n      test_cases [{\n        text \"Living abroad has its fair share of adventures and challenges. Every day feels like a new page, filled with small moments that bring both joy and growth. From navigating local markets to mastering unfamiliar public transit systems, each experience adds a layer to your independence. The thrill of discovering new foods, festivals, and traditions is balanced by the occasional pang of homesickness. However, those moments of nostalgia make connecting with fellow students or locals even more special. Studying abroad isn't just about classes or coursework; it's a journey in self-discovery. You learn the art of adapting, of communicating across language barriers, and of appreciating differences. Each friendship forged and each lesson learned becomes a part of who you are. By the time you return home, you realize you’re carrying a piece of this place with you. It’s the beauty of travel – it changes you in ways you never expected.\"\n        number_of_sentences \"2\"\n      }]\n      input_variables [\n        \"text\"\n        \"number_of_sentences\"\n        ]\n    }\n  }\n}\n",
    "generators.baml": "// This helps use auto generate libraries you can use in the language of\n// your choice. You can have multiple generators if you use multiple languages.\n// Just ensure that the output_dir is different for each generator.\ngenerator target {\n    // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\", \"rest/openapi\"\n    output_type \"python/pydantic\"\n\n    // Where the generated code will be saved (relative to baml_src/)\n    output_dir \"../\"\n\n    // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\n    // The BAML VSCode extension version should also match this version.\n    version \"0.67.0\"\n\n    // Valid values: \"sync\", \"async\"\n    // This controls what `b.FunctionName()` will be (sync or async).\n    default_client_mode sync\n}\n",
}

def get_baml_files():
    return file_map
